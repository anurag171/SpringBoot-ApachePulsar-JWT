version: "2"
services:
  producer_service:
    container_name: producer_service
    build: .
    restart: always
    image: iotclient
    ports:
      - 8071:8071
    hostname: producer_service
    environment:
      - server.port=8071
      - pulsar.service-url=pulsar://pulsar:6650
    depends_on:
      - pulsar
  consumer_service:
    container_name: consumer_service
    build: .
    restart: always
    image: iotconsumer
    ports:
      - 8070:8070
    hostname: consumer_service
    environment:
      - server.port=8070
      - spring.application.name=datastore
      - pulsar.service-url=pulsar://pulsar:6650      
    depends_on:
      - producer_service
  api_service:
    container_name: api-service
    build: .
    restart: always
    image: iotmetricapi
    ports:
      - 8072:8072
    hostname: api-service
    depends_on:
      - discovery-service
    environment:
      - spring.application.name=metricapi
      - server.port=8072
      - eureka.instance.instance-id= $${spring.application.name}:$${random.value}
      - eureka.client.service-url.defaultZone= http://discovery-service:8069/eureka 
  discovery_service:
    container_name: discovery-service
    build: .
    restart: always
    image: iotdiscovery
    ports:
      - 8069:8069
    hostname: discovery-service
    environment:
      - server.port=8069
      - spring.application.name=MetricDiscovery
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
      - logging.level.com.netflix.eureka=OFF
      - logging.level.com.netflix.discovery=OFF
  gateway-service:
    container_name: gateway-service
    build: .
    restart: always
    image: iotgateway
    ports:
      - 8068:8068
    hostname: gateway-service
    environment:
      - spring.application.name=gateway-service
      - spring.cloud.gateway.routes.id=api-service
      - spring.cloud.gateway.routes.uri=lb://api-service
      - spring.cloud.gateway.routes.predicates.Method=GET,POST
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://discovery-service:8069/eureka
      - eureka.instance=discovery-service
      - server.port=8068
    depends_on:
      - discovery-service
  pulsar:
    container_name: pulsar
    hostname: pulsar
    image: apachepulsar/pulsar:latest
    restart: always
    ports:
      - 6650:6650
      - 8080:8080
    command: >
      /bin/bash -c "bin/pulsar standalone"
    volumes:
      - ./pulsardata/:/pulsar/data
